version: 2
defaults: &defaults
  docker:
    - image: circleci/php:7.1-jessie-node-browsers
    - image: postgres:9.6
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: watch_tower_dev_test
    - image: circleci/redis:4.0.11
  working_directory: ~/watch-tower

persist_to_workspace: &persist_to_workspace
  persist_to_workspace:
    root: .
    paths: .

attach_workspace: &attach_workspace
  attach_workspace:
    at: ~/watch-tower

build_and_push_image: &build_and_push_image
  run:
    name: build image
    command: |
      export IMG_TAG=$(echo $CIRCLE_SHA1 | cut -c -7)
      echo $IMG_TAG
      docker login -u _json_key -p "$(echo $GCLOUD_SERVICE_KEY)" https://gcr.io
      docker build -f docker/prod/Dockerfile -t gcr.io/$GCP_PROJECT_ID/$PROJECT_NAME:$IMG_TAG .
      docker push gcr.io/$GCP_PROJECT_ID/$PROJECT_NAME:$IMG_TAG

configure_gcloud: &configure_gcloud
  run:
    name: configure gcloud default settings
    command: |
      gcloud auth activate-service-account --key-file ~/watch-tower/auth_key.json
      gcloud container clusters get-credentials k8-test --zone us-central1-a --project $GCP_PROJECT_ID

generate_env_file: &generate_env_file
  run:
   name: Generate a .env
   command: |
     echo -e $env > .env


deploy_to_kubernetes: &deploy_to_kubernetes
  run:
    name: Run ansible playbook to configure kubernetes
    command: |
      export IMG_TAG=$(echo $CIRCLE_SHA1 | cut -c -7)
      cd watchtower-deployment-scripts
      ansible-playbook ansible/backend/main.yml -vvv


jobs:
  deploy_to_staging:
    docker:
      - image: gcr.io/$GCP_PROJECT_ID/watchtower-frontend-base
        auth:
          username: _json_key
          password: $GCLOUD_SERVICE_KEY
        environment:
          GOOGLE_APPLICATION_CREDENTIALS: /root/watch-tower/auth_key.json
          DEPLOYMENT_SCRIPTS_REPO: git@github.com:andela/watchtower-deployment-scripts.git
          IMAGE_TAG: $(echo $CIRCLE_SHA1 | cut -c -7)
          namespace: default


    working_directory: ~/watch-tower
    steps:
      - checkout
      - setup_remote_docker
      - *attach_workspace
      - run: 
          name: Add gcloud key to json file
          command: echo $GCLOUD_SERVICE_KEY > ~/watch-tower/auth_key.json
      - *generate_env_file
      - run:
          name: list folders
          command: ls
      - *configure_gcloud
      - run: 
          name: Delete old migration job
          command: kubectl delete job watchtower-backend
      - run:
          name: Clone the deployment scripts repo
          command: |
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
            git clone -b ft-attach-postgres-database-161544227 ${DEPLOYMENT_SCRIPTS_REPO}
      - *build_and_push_image
      - *deploy_to_kubernetes
  checkout:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install Composer Packages
          command: composer install
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - *persist_to_workspace

  test_and_report:
    <<: *defaults
    steps:
      - *attach_workspace
      - run:
          name: Install Laravel Test pre-requisites
          command: |
            sudo apt update
            sudo apt install zlib1g-dev libsqlite3-dev
            sudo docker-php-ext-install zip
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Wait for postgres to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Wait for redis to be ready
          command: |
            dockerize -wait tcp://localhost:6379 -timeout 1m
      - run:
          name: Run Watch tower tests
          command: |
            ./cc-test-reporter before-build
            composer test
            ./cc-test-reporter after-build --coverage-input-type clover --exit-code $?

workflows:
  version: 2
  run_tests:
    jobs:
      - checkout
      - test_and_report:
          requires:
            - checkout
      - deploy_to_staging:
          requires:
            - test_and_report
          filters:
            branches:
              only: develop